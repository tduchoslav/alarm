<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-3.2.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc     
        http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd">

       <!-- <import resource="applicationContext.xml"/>-->

		<mvc:annotation-driven/>
		
		<!-- singleton keeps state of the alarm -->
    	<bean id="alarmInfoHolder" class="com.tduch.alarm.holder.AlarmInfoHolder" scope="singleton"/>
		
		<context:component-scan base-package="com.tduch.alarm.conf" />
		<context:component-scan base-package="com.tduch.alarm.monitoring" />
		<context:component-scan base-package="com.tduch.alarm.restservice" />
		<context:component-scan base-package="com.tduch.alarm.service" />
		
		<jpa:repositories base-package="com.tduch.alarm.repository"/>
    	
    	
    	<context:property-placeholder location="classpath:application.properties, classpath:database.properties" />

		<bean class="org.apache.commons.dbcp2.BasicDataSource" id="dataSource">
    		<property name="driverClassName" value="${jdbc.driverClassName}" />
    		<property name="url" value="${jdbc.url}" />
    		<property name="username" value="${jdbc.username}" />
    		<property name="password" value="${jdbc.password}" />
		</bean>
		
		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
			<property name="dataSource" ref="dataSource"/>
			<property name="packagesToScan" value="com.tduch.alarm.entity" />
			<property name="jpaProperties">
    			<props>
      				<prop key="hibernate.show_sql">true</prop>
      				<prop key="hibernate.hbm2ddl.auto">update</prop>
    			</props>
    		</property>
		</bean>
		
		<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
  			<property name="showSql" value="true"/>
  			<property name="generateDdl" value="false"/>
  			<property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect"/>
  			<property name="database" value="HSQL" />
		</bean>
		
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
                <property name="entityManagerFactory" ref="entityManagerFactory" />
        </bean>
	  
		<jdbc:initialize-database data-source="dataSource">
    		<jdbc:script location="classpath:db/create-db-if-not-exists.sql" />
		</jdbc:initialize-database>
		
    
		<task:annotation-driven/>
		
</beans>